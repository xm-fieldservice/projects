# 前端Dockerfile - 基于Nginx
FROM nginx:alpine

# 安装必要的工具
RUN apk add --no-cache curl

# 创建工作目录
WORKDIR /usr/share/nginx/html

# 复制前端文件
COPY auth-block/ ./auth-block/
COPY qa-note-block/ ./qa-note-block/
COPY ui-block/ ./ui-block/
COPY shared/ ./shared/
COPY deploy-block/admin.html ./admin.html
COPY deploy-block/admin.css ./css/admin.css
COPY deploy-block/admin.js ./js/admin.js

# 复制主页面文件
COPY ui-block/index.html ./index.html
COPY ui-block/main.css ./css/main.css
COPY ui-block/main.js ./js/main.js

# 创建CSS和JS目录结构
RUN mkdir -p /usr/share/nginx/html/css && \
    mkdir -p /usr/share/nginx/html/js && \
    mkdir -p /usr/share/nginx/html/assets

# 复制样式文件到统一目录
COPY auth-block/auth.css ./css/
COPY qa-note-block/qa-note.css ./css/
COPY ui-block/message.css ./css/

# 复制脚本文件到统一目录
COPY auth-block/auth.js ./js/
COPY qa-note-block/qa-note.js ./js/
COPY qa-note-block/qa-note-saver.js ./js/
COPY shared/api.js ./js/
COPY shared/notebook.js ./js/
COPY shared/utils.js ./js/

# 设置正确的权限
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# 复制Nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# 启动Nginx
CMD ["nginx", "-g", "daemon off;"] 